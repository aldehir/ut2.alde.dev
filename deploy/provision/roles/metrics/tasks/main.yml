---
- name: Upload metrics CA
  ansible.builtin.copy:
    content: "{{ metrics_endpoint_ca }}\n"
    dest: /etc/pki/tls/certs/metrics-ca.crt
    mode: "0644"
  become: true

- name: Upload certificate
  ansible.builtin.copy:
    content: "{{ metrics_endpoint_certificate }}\n"
    dest: /etc/pki/tls/certs/metrics.crt
    mode: "0644"
  become: true

- name: Upload certificate key
  ansible.builtin.copy:
    content: "{{ metrics_endpoint_certificate_key }}\n"
    dest: /etc/pki/tls/private/metrics.key
    mode: "0600"
  become: true

- name: Download the node exporter
  ansible.builtin.get_url:
    url: "{{ metrics_node_exporter_url }}"
    dest: /root/
    mode: "0644"
  register: metrics_node_exporter_download
  become: true

- name: Extract the node exporter
  ansible.builtin.unarchive:
    src: "{{ metrics_node_exporter_download.dest }}"
    creates: /usr/local/bin/node_exporter
    dest: /usr/local/bin
    mode: "0755"
    include:
      - "{{ metrics_node_exporter_name }}/node_exporter"
    extra_opts:
      - --strip-components=1
    remote_src: true
  become: true

- name: Create a config directory for exporters
  ansible.builtin.file:
    dest: /etc/exporters
    state: directory
    mode: "0755"
  become: true

- name: Provide a web config exporters
  ansible.builtin.copy:
    src: web_config.yml
    dest: /etc/exporters/web_config.yml
    mode: "0600"
  become: true

- name: Create a node_exporter service file
  ansible.builtin.copy:
    src: node_exporter.service
    dest: /etc/systemd/system/node_exporter.service
    mode: "0644"
  become: true

- name: Enable and start node_exporter
  ansible.builtin.service:
    name: node_exporter.service
    state: started
    enabled: true
    daemon_reload: true
  become: true

- name: Enable port 9100
  ansible.posix.firewalld:
    port: 9100/tcp
    zone: public
    state: enabled
    immediate: true
    permanent: true
  become: true
