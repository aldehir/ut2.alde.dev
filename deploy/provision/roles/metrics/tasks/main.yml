---
- name: Install nginx
  ansible.builtin.package:
    name: nginx
    state: present
  become: true

- name: Upload metrics CA
  ansible.builtin.copy:
    content: "{{ metrics_endpoint_ca }}\n"
    dest: /etc/pki/tls/certs/metrics-ca.crt
    mode: "0644"
    owner: nginx
    group: nginx
  become: true

- name: Upload certificate
  ansible.builtin.copy:
    content: "{{ metrics_endpoint_certificate }}\n"
    dest: /etc/pki/tls/certs/metrics.crt
    mode: "0644"
    owner: nginx
    group: nginx
  become: true

- name: Upload certificate key
  ansible.builtin.copy:
    content: "{{ metrics_endpoint_certificate_key }}\n"
    dest: /etc/pki/tls/private/metrics.key
    mode: "0600"
    owner: nginx
    group: nginx
  become: true

- name: Install nginx.conf
  ansible.builtin.copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    mode: "0644"
  notify: Restart nginx
  become: true

- name: Enable https
  ansible.posix.firewalld:
    service: https
    state: enabled
    zone: public
    immediate: true
    permanent: true
  become: true

- name: Start nginx
  ansible.builtin.service:
    name: nginx.service
    state: started
    enabled: true
  become: true

- name: Download the node exporter
  ansible.builtin.get_url:
    url: "{{ metrics_node_exporter_url }}"
    dest: /root/
    mode: "0644"
  register: metrics_node_exporter_download
  become: true

- name: Extract the node exporter
  ansible.builtin.unarchive:
    src: "{{ metrics_node_exporter_download.dest }}"
    creates: /usr/local/bin/node_exporter
    dest: /usr/local/bin
    mode: "0755"
    include:
      - "{{ metrics_node_exporter_name }}/node_exporter"
    extra_opts:
      - --strip-components=1
    remote_src: true
  become: true

- name: Create a config directory for exporters
  ansible.builtin.file:
    dest: /etc/exporters
    state: directory
    mode: "0755"
  become: true

- name: Provide a web config exporters
  ansible.builtin.copy:
    src: web_config.yml
    dest: /etc/exporters/web_config.yml
    mode: "0600"
  become: true

- name: Create a node_exporter service file
  ansible.builtin.copy:
    src: node_exporter.service
    dest: /etc/systemd/system/node_exporter.service
    mode: "0644"
  notify: Restart node_exporter
  become: true

- name: Enable and start node_exporter
  ansible.builtin.service:
    name: node_exporter.service
    state: started
    enabled: true
    daemon_reload: true
  become: true

- name: Disable port 9100
  ansible.posix.firewalld:
    port: 9100/tcp
    zone: public
    state: disabled
    immediate: true
    permanent: true
  become: true

- name: Install promtail
  ansible.builtin.dnf:
    name: "{{ metrics_promtail_rpm }}"
    disable_gpg_check: true
    state: present
  become: true

- name: Configure promtail
  ansible.builtin.template:
    src: promtail.yml.j2
    dest: /etc/promtail/config.yml
    mode: "0600"
    owner: promtail
    group: promtail
  notify: Restart promtail
  become: true

- name: Create a state directory for promtail
  ansible.builtin.file:
    path: /var/lib/promtail
    state: directory
    mode: "0700"
    owner: promtail
    group: promtail
  become: true

- name: Add rsyslog config for promtail
  ansible.builtin.copy:
    src: promtail.rsyslog.conf
    dest: /etc/rsyslog.d/20-promtail.conf
    mode: "0644"
  notify: Restart rsyslog
  become: true

- name: Enable promtail
  ansible.builtin.service:
    name: promtail.service
    enabled: true
  become: true

- name: Enable podman socket
  ansible.builtin.systemd:
    name: podman.socket
    state: started
    enabled: true
  notify: Restart cadvisor
  become: true

- name: Install cAdvisor
  ansible.builtin.get_url:
    url: "{{ metrics_cadvisor_url }}"
    dest: /usr/local/bin/cadvisor
    mode: "0755"
    checksum: "{{ metrics_cadvisor_checksum }}"
  notify: Restart cadvisor
  become: true

- name: Create cadvisor unit file
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=cadvisor
      After=network.target

      [Service]
      ExecStart=/usr/local/bin/cadvisor -disable_root_cgroup_stats

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/cadvisor.service
    mode: "0644"
  notify:
    - Reload systemd
    - Restart cadvisor
  become: true

- name: Enable cadvsior
  ansible.builtin.service:
    name: cadvisor.service
    state: started
    enabled: true
  become: true
