name: Provision
on:
  workflow_dispatch:
    inputs:
      limit:
        type: choice
        options:
          - ut2-01.chi.staging.kokuei.dev
          - ut2-01.dfw.staging.kokuei.dev

jobs:
  provision:
    name: Provision
    runs-on: ubuntu-latest
    concurrency:
      group: provision-${{ inputs.limit }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.11"
          cache: pip

      - name: Install dependencies
        run: pip install -r deploy/requirements.txt

      - name: Install ansible collections
        run: ansible-galaxy collection install -r deploy/provision/requirements.yml

      - name: Create ansible private key and become password files
        env:
          ANSIBLE_PRIVATE_KEY: ${{ secrets.ANSIBLE_PRIVATE_KEY }}
          ANSIBLE_BECOME_PASSWORD: ${{ secrets.ANSIBLE_BECOME_PASSWORD }}
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        run: |
          file=$(mktemp)
          cat <<EOF > $file
          $ANSIBLE_PRIVATE_KEY
          EOF
          chmod 600 $file
          echo "ANSIBLE_PRIVATE_KEY_FILE=$file" >> "$GITHUB_ENV"

          file=$(mktemp)
          echo -n "$ANSIBLE_BECOME_PASSWORD" > $file
          chmod 600 $file
          echo "ANSIBLE_BECOME_PASSWORD_FILE=$file" >> "$GITHUB_ENV"

          file=$(mktemp)
          echo -n "$ANSIBLE_VAULT_PASSWORD" > $file
          chmod 600 $file
          echo "ANSIBLE_VAULT_PASSWORD_FILE=$file" >> "$GITHUB_ENV"

      - name: Run Playbook
        env:
          LIMIT: ${{ inputs.LIMIT }}
          ANSIBLE_REMOTE_USER: ${{ vars.ANSIBLE_REMOTE_USER }}
          ANSIBLE_FORCE_COLOR: "1"
          LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
        run: |
          ansible-playbook -i deploy/provision/inventory \
            --ssh-extra-args "-o StrictHostKeyChecking=no" \
            --limit $LIMIT \
            -e @deploy/provision/acls.yml \
            deploy/provision/playbook.yml
